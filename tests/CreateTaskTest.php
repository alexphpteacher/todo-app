<?php
/**
 * Created by PhpStorm.
 * User: alex
 * Date: 16.12.18
 * Time: 20:45
 */

namespace App\Tests;


use App\DataFixtures\AppFixtures;
use Symfony\Bundle\FrameworkBundle\Client;
use Symfony\Bundle\FrameworkBundle\Console\Application;
use Symfony\Bundle\FrameworkBundle\Test\WebTestCase;
use Symfony\Component\Console\Input\StringInput;

class CreateTaskTest extends WebTestCase
{
    /**
     * @var Client
     */
    protected $client;

    /**
     * @var String
     */
    protected $token;

    protected function setUp()
    {
        parent::setUp(); // TODO: Change the autogenerated stub
        $this->client = static::createClient();

        $kernel = $this->client->getKernel();
//        $app = new Application($kernel);
//        $app->setAutoExit(false);
//        $app->run(new StringInput('doctrine:fixtures:load -n'));

        $this->client->request(
            'POST',
            '/api/login_check',
            [],
            [],
            [
                'HTTP_ACCEPT' => 'application/json',
                'CONTENT_TYPE' => 'application/json',
            ],
            json_encode(['username' => 'alex', 'password' => 'alex'])
        );
        $this->token = 'Bearer ' . json_decode($this->client->getResponse()->getContent())->token;
    }

    public function testPostTask()
    {
        $this->client->request(
            'POST',
            '/api/task',
            [],
            [],
            [
                'HTTP_JWT_AUTHORIZATION' => $this->token,
                'HTTP_ACCEPT' => 'application/json',
                'CONTENT_TYPE' => 'application/json',
            ],
            json_encode([
                "content" => "first test task1",
                "completed" => false,
                "created_at" => "2011-12-05T12:00:00+00:00"
            ])
        );
        $response = $this->client->getResponse();

        $this->assertTrue($response->isSuccessful());
        $this->assertEquals(201, $response->getStatusCode());
        $this->assertJson($response->getContent());
    }

    public function testPostTaskWithoutContent()
    {
        $this->client->request(
            'POST',
            '/api/task',
            [],
            [],
            [
                'HTTP_JWT_AUTHORIZATION' => $this->token,
                'HTTP_ACCEPT' => 'application/json',
                'CONTENT_TYPE' => 'application/json',
            ],
            json_encode([
//                "content" => "first test task1",
                "completed" => false,
                "created_at" => "2011-12-05T12:00:00+00:00"
            ])
        );
        $response = $this->client->getResponse();

        $this->assertTrue($response->isClientError());
        $this->assertEquals(400, $response->getStatusCode());
        $this->assertJson($response->getContent());

        $obj = json_decode($response->getContent());
        $this->assertEquals(400, $obj->code);
        $this->assertEquals("Validation Failed", $obj->message);
    }
}